{"version":3,"file":"static/js/58.0cff7d93.chunk.js","mappings":"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","sources":["Tools/localstorage/useLocalStorageStatus.tsx","wxw/app.ts","wxw/Upload.tsx","wxw/Image.tsx","wxw/ButtonGroup.tsx","wxw/Wxw.tsx"],"sourcesContent":["import { useState, useEffect, useCallback, Dispatch, SetStateAction } from 'react';\n\n// 类型定义，让 Hook 的返回值更清晰\ntype UseLocalStorageReturn<T> = [\n    T, // 存储的值\n    Dispatch<SetStateAction<T>>, // 更新值的函数，API 与 useState 的 setter 相同\n    Error | null // 错误状态\n];\n\n/**\n * 一个与 React.useState API 类似，但将状态持久化到 localStorage 的 Hook。\n * 它还支持跨标签页的同步和错误处理。\n * \n * @param key - 在 localStorage 中使用的键。\n * @param initialValue - 如果 localStorage 中没有值，则使用的初始值。\n * @returns [storedValue, setValue, error] - 一个包含当前值、更新函数和错误状态的数组。\n */\nexport default function useLocalStorage<T>(key: string, initialValue: T): UseLocalStorageReturn<T> {\n    // 初始化 initial Value\n    // 使用一个函数作为 useState 的初始值，以确保 localStorage.getItem 只在客户端初始渲染时执行一次。\n    // 这可以避免性能问题，并防止在 SSR (服务器端渲染) 环境下因 window 未定义而出错。\n    const [storedValue, setStoredValue] = useState<T>(() => {\n        // 如果在非浏览器环境（如 Next.js 服务器端），直接返回初始值\n        if (typeof window === 'undefined') {\n            return initialValue;\n        }\n\n        try {\n            // 尝试从 localStorage 获取已存在的值\n            const item = window.localStorage.getItem(key);\n            // 如果有值，则解析它；否则，返回初始值\n            return item ? (JSON.parse(item) as T) : initialValue;\n        } catch (error) {\n            // 如果解析出错，则打印错误并返回初始值\n            console.error(`Error reading localStorage key “${key}”:`, error);\n            return initialValue;\n        }\n    });\n\n    // 状态2: 存储可能发生的错误\n    const [error, setError] = useState<Error | null>(null);\n\n    // 使用 useCallback 来包装 setValue 函数，以确保其引用在渲染间保持稳定，\n    // 除非其依赖项（storedValue）发生变化。\n    // 不加入 storedValue会出现旧值。\n    const setValue: Dispatch<SetStateAction<T>> = useCallback(\n        (value) => {\n            try {\n                // 允许传入一个函数来计算新值，就像 useState 的 setter 一样\n                const valueToStore = value instanceof Function ? value(storedValue) : value;\n\n                setStoredValue(valueToStore);\n\n                if (typeof window !== 'undefined') {\n                    const newValue = JSON.stringify(valueToStore);\n                    // 在浏览器环境中，将新值持久化到 localStorage\n                    window.localStorage.setItem(key, newValue);\n                    // 手动触发一个 storage 事件，以便同一页面内的其他 Hook 实例也能同步\n                    // `storage` 事件通常只通知其他页面\n                    // isTrusted = false, 且需要自己填数字。\n                    window.dispatchEvent(new StorageEvent('storage', { key, newValue }));\n                } else {\n                    // 更新 React 状态\n                }\n\n            } catch (err) {\n                // 如果 stringify 出错，则捕获并更新错误状态\n                const e = err as Error;\n                console.error(`Error setting localStorage key “${key}”:`, e);\n                setError(e);\n            }\n        },\n        [key, storedValue]\n    );\n\n    // Effect: 监听 localStorage 的 'storage' 事件\n    // 这个事件在其他标签页（或 iframe）修改了 localStorage 时触发\n    useEffect(() => {\n        // 确保在浏览器环境中执行\n        if (typeof window === 'undefined') return;\n\n        const handleStorageChange = (event: StorageEvent) => {\n            // 当事件对应的 key 是我们正在监听的 key，并且有新值时\n            console.log(event, event.key === key, event.newValue)\n            if (event.key === key && event.newValue) {\n                try {\n                    setStoredValue(JSON.parse(event.newValue) as T);\n                    setError(null); // 同步成功，清除错误\n                } catch (err) {\n                    const e = err as Error;\n                    console.error(`Error parsing new value for key “${key}” from storage event:`, e);\n                    setError(e);\n                }\n            }\n        };\n\n        // 添加事件监听器\n        window.addEventListener('storage', handleStorageChange);\n\n        // 清理函数：在组件卸载时移除监听器，防止内存泄漏\n        return () => {\n            window.removeEventListener('storage', handleStorageChange);\n        };\n    }, [key]); // 依赖数组中只有 key，因此只在 key 改变时重新绑定事件监听\n\n    return [storedValue, setValue, error];\n}","export async function registeApplication(host: string, client_id: string, client_secret: string) {\n    const endpoint = `https://${host}/oauth/authorize?client_id=${client_id}`\n    const resp = await fetch(endpoint, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            client_name: \"MoonChan\",\n            grant_type: \"authorization_code\",\n            client_id: client_id,\n            client_secret: client_secret,\n            redirect_uris: \"urn:ietf:wg:oauth:2.0:oob\",\n            scopes: \"read write follow push\",\n            website: \"https://page.moonchan.xyz/#/wxw\"\n        })\n    }).then(res => res.json())\n\n    console.log(resp)\n\n    return resp\n}\n\n\n\nexport async function uploadFile(file: File, host: string, access_token: string): Promise<MastodonMediaResponse> {\n    const formData = new FormData();\n    formData.append('file', file); // 确保使用服务器要求的字段名（通常是 'file'）\n\n    const response = await fetch(\"https://proxy.moonchan.xyz/api/v2/media\", {\n    // const response = await fetch(`https://${host}/api/v2/media`, { // 30s限制.\n        method: \"POST\",\n        headers: {\n            \"X-Scheme\": \"https\",\n            \"X-Host\": host,\n            \"X-Referer\": `https://${host}/`,\n            \"Authorization\": `Bearer ${access_token}`,\n            // \"X-Host\": `${localStorage.getItem(\"mastodon_host\")}`,\n            // \"Authorization\": `Bearer ${localStorage.getItem(\"mastodon_access_token\")}`,\n            // \"Content-Type\": \"multipart/form-data\" // 不需要手动设置，浏览器会自动处理\n        },\n        body: formData,\n        credentials: \"include\" // 添加此行以发送 Cookie\n    });\n\n    const data = await response.json();\n    console.log(data);\n\n    return data as MastodonMediaResponse;\n}\nexport async function postStatus(host: string, access_token: string, data: StatusProps) {\n    const endpoint = `https://proxy.moonchan.xyz/api/v1/statuses`\n    const resp = await fetch(endpoint, {\n        method: 'POST',\n        headers: {\n            'X-Scheme': 'https',\n            'X-Host': host,\n            \"X-Referer\": `https://${host}/`,\n\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${access_token}`\n        },\n        body: JSON.stringify(data)\n    }).then(res => res.json())\n\n    console.log(resp)\n\n    return resp\n}\n\n\nexport interface MastodonMediaResponse {\n    id: string;\n    url?: string;\n    preview_url: string;\n}\n\nexport interface MastodonStatusResponse {\n    media_attachments: MastodonMediaResponse[];\n}\n\n//\t{\n//\t    \"status\": \"wow\",\n//\t    \"in_reply_to_id\": null,\n//\t    \"media_ids\": [\n//\t        \"114839922529179944\"\n//\t    ],\n//\t    \"sensitive\": false,\n//\t    \"spoiler_text\": \"\",\n//\t    \"visibility\": \"private\",\n//\t    \"poll\": null,\n//\t    \"language\": \"zh\"\n//\t}\nexport interface StatusProps {\n    status: string;\n    in_reply_to_id: string | null;\n    media_ids: string[];\n    sensitive: boolean;\n    spoiler_text: string;\n    visibility: \"public\" | \"unlisted\" | \"private\" | \"direct\";\n    poll: null; // 可能是一个 Poll 对象\n    language: string;\n}\n\nexport function copyText(text: string) {\n  if (navigator.clipboard?.writeText) {\n    return navigator.clipboard.writeText(text)\n      .then(() => true)\n      .catch(() => fallbackCopyText(text)); // 失败时降级\n  }\n  return fallbackCopyText(text); // 直接使用备用方案\n}\n\nfunction fallbackCopyText(text: string) {\n  const textArea = document.createElement(\"textarea\");\n  textArea.value = text;\n  textArea.style.position = \"fixed\"; // 避免页面滚动\n  textArea.style.top = \"-1000px\";    // 移出视口\n  document.body.appendChild(textArea);\n  textArea.select();\n\n  try {\n    document.execCommand(\"copy\");\n    console.log(\"复制成功！\");\n  } catch (err) {\n    console.error(\"复制失败：\", err);\n  } finally {\n    document.body.removeChild(textArea); // 清理临时元素\n  }\n}","import { useState } from \"react\";\nimport useLocalStorage from \"../Tools/localstorage/useLocalStorageStatus\";\nimport { MastodonMediaResponse, uploadFile } from \"./app\";\n\nexport default function Upload({ onSucceed }: { onSucceed: (o: MastodonMediaResponse) => void }) {\n    const [mastodonConfig] = useLocalStorage(\"mastodon\", {\n        host: \"\",\n        access_token: \"\",\n    });\n    const onUpload = (file: File) => uploadFile(file, mastodonConfig.host, mastodonConfig.access_token)\n    // const onUpload = (file: File) => uploadFile(file, \"wxw.moe\", \"6tLKQhJWkmqGfKBuPj4LUOSJsWsMUvTGHx_mdCU2z0o\")\n    // const onUpload = (file: File) => uploadFile(file, \"mstdn.jp\", \"7UyxiXr0UsxaXWMOALFXoLEtXrbqVaI8SxlwW5Nhh40\")\n\n    const [selectedFile, setSelectedFile] = useState<File | null>(null);\n\n    const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files && e.target.files.length > 0) {\n            setSelectedFile(e.target.files[0]);\n        }\n    };\n\n    const handleSubmit = (e: React.FormEvent) => {\n        e.preventDefault(); // 阻止表单默认提交行为，避免页面刷新\n        if (selectedFile) {\n            onUpload(selectedFile).then((data) => {\n                onSucceed(data);\n                setSelectedFile(null);\n            }).catch((error) => {\n                console.error(\"上传失败:\", error);\n            });\n        }\n    };\n\n    return <form\n        onSubmit={handleSubmit}\n        className=\"flex items-center space-x-2 w-full \n        max-w-md p-1 bg-white rounded-lg shadow-inner border border-gray-200 \n        focus-within:ring-2 focus-within:ring-blue-500 transition-all\"\n    >\n        <input\n            type=\"file\"\n            onChange={handleFileChange}\n            className=\"block w-full text-sm text-gray-500\n            file:mr-4 file:py-2 file:px-4\n            file:rounded-lg file:border-0\n            file:text-sm file:font-medium\n            file:bg-gray-100 file:text-gray-700\n            hover:file:bg-gray-200\n            cursor-pointer\"\n        />\n        <button\n            type=\"submit\"\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg font-medium\n            hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500\n            focus:ring-opacity-50 disabled:opacity-50 disabled:cursor-not-allowed\n            transition-colors whitespace-nowrap\"\n            disabled={selectedFile === null}  // 假设有状态跟踪文件选择\n        >\n            上传\n        </button>\n    </form>\n}\n","import { MastodonMediaResponse } from \"./app\"\nexport default function Image({ data, onClick }: { data: MastodonMediaResponse, onClick?: (data: MastodonMediaResponse) => void }) {\n\n    return <div className=\"relative\" onClick={() => { if (onClick) onClick(data) }}>\n        <img src={data.preview_url} alt={`${data.id}`} className=\"w-auto h-auto rounded-lg\" />\n        <button onClick={() => { if (onClick) onClick(data) }}\n            className=\"absolute top-2 right-2 bg-red-600 text-white rounded-full p-1 \n                hidden\">\n            删除\n        </button>\n    </div>\n}   ","import React from 'react';\n\ninterface ButtonGroupProps<T> {\n    buttons: { label: string; value: T }[];\n    value: T;\n    setValue: (value: T) => void;\n}\n\n\nconst ButtonGroup = <T,>({ buttons, value, setValue }: ButtonGroupProps<T>) => {\n    return (\n        <div\n            className=\"flex w-full rounded-lg overflow-hidden border border-gray-200 shadow-sm\"\n            role=\"group\"\n        >\n            {buttons.map((button) => (\n                <button\n                    key={button.label}\n                    className={`flex-1 py-2 px-4 text-sm font-medium transition-colors duration-200\n                        ${value === button.value\n                            ? 'bg-blue-500 text-white'\n                            : 'bg-white text-gray-700 hover:bg-gray-50'}\n                        focus:outline-none focus:ring-2 focus:ring-blue-300\n                    `}\n                    onClick={() => setValue(button.value)}\n                    aria-pressed={value === button.value}\n                >\n                    {button.label}\n                </button>\n            ))}\n        </div>\n    );\n};\n\nexport default ButtonGroup;\n","import { useEffect, useState } from \"react\";\nimport useLocalStorage from \"../Tools/localstorage/useLocalStorageStatus\";\nimport Upload from \"./Upload\";\nimport { MastodonMediaResponse, StatusProps, postStatus, uploadFile, copyText } from \"./app\";\nimport Image from \"./Image\";\nimport ButtonGroup from \"./ButtonGroup\";\n\nexport default function Wxw() {\n    const [mastodonConfig, setMastodonConfig] = useLocalStorage(\"mastodon\", {\n        host: \"\",\n        access_token: \"\",\n        sensitive: false,\n        spoiler_text: \"\",\n        visibility: \"public\",\n    });\n    const [moonchanConfig, setMoonchanConfig] = useLocalStorage(\"moonchan\", {\n        bid: 23,\n        tid: 0,\n    });\n    const [status, setStatus] = useState(\"\");\n    const [inReplyToID, setInReplyToID] = useState<string | null>(null);\n    const [imageArray, setImageArray] = useState<MastodonMediaResponse[]>([]);\n    const [mediaIDs, setMediaIDs] = useState<string[]>([]);\n    useEffect(() => {\n        setMoonchanEnabled(true);\n        setMediaIDs(imageArray.map((data) => data.id));\n    }, [imageArray]);\n    // const [sensitive, setSensitive] = useState(false);\n    // const [spoilerText, setSpoilerText] = useState(\"\");\n    // const [visibility, setVisibility] = useState(\"public\");\n    const [moonchanEnabled, setMoonchanEnabled] = useState(true);\n\n    const [responseMediaArray, setResponseMedia] = useState<MastodonMediaResponse[]>([]);\n\n    const onSucceed = (o: MastodonMediaResponse) => {\n        console.log(\"上传成功:\", o);\n        setImageArray(prev => [...prev, o]);\n    }\n\n    const onPost = () => {\n        const data = {\n            status,\n            in_reply_to_id: inReplyToID,\n            media_ids: mediaIDs,\n            sensitive: mastodonConfig.sensitive,\n            spoiler_text: mastodonConfig.spoiler_text,\n            visibility: mastodonConfig.visibility,\n            poll: null,\n            language: \"zh\",\n        } as StatusProps;\n        console.log(data);\n\n        // postStatus(\"mstdn.jp\", \"7UyxiXr0UsxaXWMOALFXoLEtXrbqVaI8SxlwW5Nhh40\", data)\n        postStatus(mastodonConfig.host, mastodonConfig.access_token, data)\n            .then((resp) => {\n                console.log(\"发布成功:\", resp);\n                setStatus(\"\");\n                setInReplyToID(null);\n                setImageArray([]);\n                setResponseMedia(resp.media_attachments || []);\n            })\n            .catch((error) => {\n                console.error(\"发布失败:\", error);\n            });\n    }\n\n    const onPaste = (e: React.ClipboardEvent<HTMLDivElement>) => {\n        const items = e.clipboardData.items;\n        const files: File[] = []; // 创建一个空数组来存放提取的文件\n\n        for (let i = 0; i < items.length; i++) {\n            const item = items[i];\n            // 正确的逻辑：检查 item.kind 是否为 'file'\n            if (item.kind === 'file') {\n                // 正确的逻辑：使用 getAsFile() 获取文件\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        }\n        // 将提取出的文件数组传递给核心处理函数\n        handleFiles(files);\n    };\n\n    const onDrop = (e: React.DragEvent<HTMLDivElement>) => {\n        e.preventDefault(); // 必须阻止默认行为，否则浏览器会直接打开文件\n        const fileList = e.dataTransfer.files;\n\n        // FileList 是一个 \"类数组\" 对象，而不是真正的数组。\n        // 使用 Array.from() 将其转换为标准的文件数组。\n        const files = Array.from(fileList);\n\n        // 将转换后的文件数组传递给核心处理函数\n        handleFiles(files);\n    };\n\n    //    统一的核心处理函数，接收一个标准的文件数组\n    async function handleFiles(files: File[]) {\n        if (files.length === 0) {\n            return; // 如果没有文件，则直接返回\n        }\n\n        console.log(`处理 ${files.length} 个文件...`);\n\n        for (const file of files) {\n            // file 在这里已经是 File 对象，可以直接使用\n            console.log('文件名:', file.name);\n            console.log('文件类型:', file.type);\n            console.log('文件大小:', file.size, 'bytes');\n\n            // 在这里添加您的文件处理逻辑，例如上传或显示预览\n            // e.g., uploadFile(file);\n            const data = await uploadFile(file, mastodonConfig.host, mastodonConfig.access_token)\n            onSucceed(data);\n        }\n    }\n\n    async function postToMoonChan() {\n        setMoonchanEnabled(false);\n        const array = imageArray.length !== 0 ? imageArray : responseMediaArray;\n        // Use the bid from the config state\n        const url = `https://moonchan.xyz/api/v2/?bid=${moonchanConfig.bid}&tid=${moonchanConfig.tid}`;\n        const headers = {\n            \"Content-Type\": \"application/json\" // 指定请求体是 JSON 格式\n        };\n        const body = JSON.stringify({\n            p: array[0]?.url || \"\",\n            txt: status,\n        });\n        const response = await fetch(url, {\n            method: \"POST\", // 使用 POST 方法\n            credentials: 'include',\n            headers: headers,\n            body: body\n        });\n        console.log(response)\n        if (!response.ok) {\n            setMoonchanEnabled(true);\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await fetch(url).then(r => r.json());\n        console.log(data);\n        if (!data || (Array.isArray(data) ? data.length === 0 : false)) {\n            setMoonchanEnabled(true);\n            throw new Error(\"No data returned from MoonChan API\");\n        }\n        const tid = (Array.isArray(data) ? data[0] : data).no! as number\n        for (const media of array.slice(1)) {\n            const mediaBody = JSON.stringify({\n                p: media.url || \"\",\n                txt: \"\"\n            });\n            const mediaResponse = await fetch(`https://moonchan.xyz/api/v2/?bid=${moonchanConfig.bid}&tid=${tid}`, {\n                method: \"POST\",\n                credentials: 'include',\n                headers: headers,\n                body: mediaBody\n            });\n            if (!mediaResponse.ok) {\n                setMoonchanEnabled(true);\n                throw new Error(`HTTP error! status: ${mediaResponse.status}`);\n            }\n        }\n    }\n\n    // 居中魔咒\n    return <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100\"\n        onPaste={onPaste}\n        onDragOver={(e) => e.preventDefault()} // 阻止默认行为以允许拖放\n        onDrop={onDrop}\n    >\n        <input type=\"text\"\n            className=\"block w-full max-w-md text-sm text-gray-700\n            mr-4 py-2 px-4\n            rounded-lg border-0\n            text-sm font-medium\"\n            placeholder=\"Host\"\n            value={mastodonConfig.host} onChange={(e) => setMastodonConfig({ ...mastodonConfig, host: e.target.value })}\n        ></input>\n        <input type=\"text\"\n            className=\"block w-full max-w-md text-sm text-gray-700\n            mr-4 py-2 px-4\n            rounded-lg border-0\n            text-sm font-medium\"\n            placeholder=\"Access Token\"\n            value={mastodonConfig.access_token} onChange={(e) => setMastodonConfig({ ...mastodonConfig, access_token: e.target.value })}\n        ></input>\n\n        <Upload onSucceed={onSucceed} />\n\n        <MediaGallery responseMedia={imageArray} setImageArray={setImageArray} />\n\n        <div className=\"mt-4 w-full max-w-md space-y-4\">\n            <ButtonGroup buttons={[\n                { label: \"公开\", value: \"public\" },\n                { label: \"不公开\", value: \"unlisted\" },\n                { label: \"私密\", value: \"private\" },\n                { label: \"私信\", value: \"direct\" },\n            ]} value={mastodonConfig.visibility} setValue={(value) => setMastodonConfig({ ...mastodonConfig, visibility: value })} />\n            <ButtonGroup buttons={[\n                { label: \"true (blur)\", value: true },\n                { label: \"false\", value: false },\n            ]} value={mastodonConfig.sensitive} setValue={(value) => setMastodonConfig({ ...mastodonConfig, sensitive: value })} />\n            <input type=\"text\"\n                className=\"block w-full max-w-md text-sm text-gray-700\n                        mr-4 py-2 px-4\n                        rounded-lg border-0\n                        text-sm font-medium\"\n                placeholder=\"spoiler\"\n                value={mastodonConfig.spoiler_text} onChange={(e) => setMastodonConfig({ ...mastodonConfig, spoiler_text: e.target.value })}\n            ></input>\n            <textarea\n                className=\"block w-full max-w-md text-sm text-gray-700\n                        mr-4 py-2 px-4\n                        rounded-lg border-0\n                        text-sm font-medium\"\n                placeholder=\"status\"\n                rows={4}\n                value={status} onChange={(e) => setStatus(e.target.value)}\n            ></textarea>\n\n            {/* START: Added input bars for Moonchan */}\n            <div className=\"flex w-full space-x-4\">\n                <input\n                    type=\"number\"\n                    className=\"block w-full text-sm text-gray-700 py-2 px-4 rounded-lg border-0 font-medium\"\n                    placeholder=\"Moonchan BID\"\n                    value={moonchanConfig.bid}\n                    onChange={(e) => setMoonchanConfig({ ...moonchanConfig, bid: parseInt(e.target.value, 10) || 0 })}\n                />\n                <input\n                    type=\"number\"\n                    className=\"block w-full text-sm text-gray-700 py-2 px-4 rounded-lg border-0 font-medium\"\n                    placeholder=\"Moonchan TID (for reply)\"\n                    value={moonchanConfig.tid || ''}\n                    onChange={(e) => setMoonchanConfig({ ...moonchanConfig, tid: parseInt(e.target.value, 10) || 0 })}\n                />\n            </div>\n            {/* END: Added input bars for Moonchan */}\n\n            <button\n                className={`${moonchanEnabled ? \"bg-blue-500 hover:bg-blue-600\" : \"bg-gray-400 cursor-not-allowed\"} w-full px-4 py-2 text-white rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500`}\n                onClick={postToMoonChan}\n                disabled={!moonchanEnabled}\n            >\n                发布到月岛\n            </button>\n            <button\n                className=\"w-full px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                onClick={onPost}\n            >\n                发布\n            </button>\n\n            <MediaGallery responseMedia={responseMediaArray} />\n\n        </div>\n    </div>\n}\n\n// The MediaGallery component remains the same\nconst MediaGallery = ({ responseMedia, setImageArray }: { responseMedia: MastodonMediaResponse[], setImageArray?: (o: MastodonMediaResponse[]) => void }) => (\n    <div className=\"grid grid-cols-3 gap-4 max-w-4xl mx-auto\">\n        {responseMedia.map((data) => (\n            <div\n                key={data.id}\n                className=\"relative group bg-gray-100 rounded-lg overflow-hidden shadow-md hover:shadow-lg transition-all duration-300\"\n                style={{\n                    width: '200px', // 固定宽度\n                    height: '200px', // 固定高度，形成方形\n                    aspectRatio: '1/1' // 确保宽高比\n                }}\n            >\n\n                <Image data={data} onClick={(deletedData) => {\n                    // if (setImageArray) setImageArray(responseMedia.filter((data) => data.id !== deletedData.id));\n                    // else copyText(deletedData.url || \"error\")\n                    copyText(deletedData.url || \"error\")\n                }} />\n\n                {setImageArray && <button\n                    className={`absolute top-2 right-2 bg-red-500 text-white \n                        rounded-full p-1.5 opacity-0 group-hover:opacity-100\n                        transition-opacity duration-200\n                        `}\n                    // ${setImageArray ? \"\" : \"hidden\"}`}\n                    onClick={() => {\n                        if (setImageArray) setImageArray(responseMedia.filter((d) => d.id !== data.id));\n                    }}\n                    aria-label=\"删除图片\"\n                >\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                        <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                    </svg>\n                </button>}\n            </div>\n        ))}\n    </div>\n)"],"names":["useLocalStorage","key","initialValue","storedValue","setStoredValue","useState","window","item","localStorage","getItem","JSON","parse","error","console","setError","setValue","useCallback","value","valueToStore","Function","newValue","stringify","setItem","dispatchEvent","StorageEvent","err","e","useEffect","handleStorageChange","event","log","addEventListener","removeEventListener","async","uploadFile","file","host","access_token","formData","FormData","append","response","fetch","method","headers","body","credentials","data","json","fallbackCopyText","text","textArea","document","createElement","style","position","top","appendChild","select","execCommand","removeChild","Upload","_ref","onSucceed","mastodonConfig","selectedFile","setSelectedFile","_jsxs","onSubmit","preventDefault","then","catch","className","children","_jsx","type","onChange","target","files","length","disabled","Image","onClick","src","preview_url","alt","id","buttons","role","map","button","label","Wxw","setMastodonConfig","sensitive","spoiler_text","visibility","moonchanConfig","setMoonchanConfig","bid","tid","status","setStatus","inReplyToID","setInReplyToID","imageArray","setImageArray","mediaIDs","setMediaIDs","setMoonchanEnabled","moonchanEnabled","responseMediaArray","setResponseMedia","o","prev","handleFiles","name","size","onPaste","items","clipboardData","i","kind","getAsFile","push","onDragOver","onDrop","fileList","dataTransfer","Array","from","placeholder","MediaGallery","responseMedia","ButtonGroup","rows","parseInt","_array$","array","url","p","txt","ok","Error","r","isArray","no","media","slice","mediaBody","mediaResponse","onPost","in_reply_to_id","media_ids","poll","language","resp","res","postStatus","media_attachments","width","height","aspectRatio","deletedData","_navigator$clipboard","navigator","clipboard","writeText","copyText","filter","d","xmlns","viewBox","fill","fillRule","clipRule"],"sourceRoot":""}