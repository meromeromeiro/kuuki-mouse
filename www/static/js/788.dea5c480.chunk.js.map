{"version":3,"file":"static/js/788.dea5c480.chunk.js","mappings":"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","sources":["upload/consts.ts","Tools/concurrent/concurrent.ts","upload/FileUpload.jsx"],"sourcesContent":["import React from \"react\";\nimport {worker} from '../Tools/concurrent/concurrent'\n\n\nexport const UPLOAD_URL = \"https://upload.moonchan.xyz/api/upload\"\n\n\nexport async function uploadFileInChunks(\n    file: File, \n    endpoint: string, \n    setProgress: React.Dispatch<React.SetStateAction<number>>,\n) {\n    const MAX_CONCURRENT_UPLOADS = 1;\n    const MAX_RETRIES = 3;\n    const CHUNK_SIZE = 1024 * 1024; // 1MB chunks\n\n    // 上传单个分块的函数\n    async function uploadChunk(i: number) {\n        const start = i*CHUNK_SIZE;\n        const end = Math.min(start + CHUNK_SIZE, file.size);\n        const fileChunk = file.slice(start, end);\n\n        let err: Error | null = null; // 允许 err 为 null\n        for (let i=0; i<MAX_RETRIES; i++) {\n            try {\n                const response = await fetch(endpoint, {\n                    method: 'PUT',\n                    headers: {\n                        'Content-Length': (start - end).toString(),\n                        'Content-Range': `bytes ${start}-${end - 1}/${file.size}`,\n                    },\n                    body: fileChunk,\n                });\n    \n                if (!response.ok) {\n                    throw new Error(`Upload failed: ${response.statusText}`);\n                }\n    \n                const responseData = await response.json() ;\n                // process[i] = true\n                setProgress((process: number)=>{ return process+1; })\n                return responseData\n            } catch (error) {\n                err = error as Error\n            }\n        }\n\n        if (err) {\n            throw err\n        }\n    }\n\n\n    const length = Math.ceil(file.size/CHUNK_SIZE)\n    setProgress(0)\n\n    const tasks = Array.from({ length: length }, (_, i) => async () => {\n        return await uploadChunk(i);\n    });\n\n    const results = await Promise.all(\n        Array.from({length: MAX_CONCURRENT_UPLOADS}, () => worker(tasks))\n    )\n\n    return results.flat().find(x => x.id)\n}","export async function worker<T>(tasks: (() => Promise<T>)[]) {\n    try {\n        const results: T[] = []\n        while (tasks.length > 0) {\n            const task = tasks.shift()\n            if (!task) return results;\n            const result = await task();\n            results.push(result);\n        }\n        return results;\n    } catch (err) {\n        throw err\n    }\n}","import React, { useState } from 'react';\nimport { UPLOAD_URL, uploadFileInChunks } from './consts';\nimport { Main } from '../App';\nimport Nav from '../Nav';\n\nconst FileUpload = () => {\n  const [file, setFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [message, setMessage] = useState({ type: '', text: '' });\n  const [progress, setProgress] = useState([false]);\n  const [link, setLink] = useState('');\n\n  // 重置状态\n  // const resetState = () => {\n  //   setFile(null);\n  //   setUploading(false);\n  //   setProgress(0);\n  //   setMessage({ type: '', text: '' });\n  //   setLink('');\n  // };\n\n  // 验证文件\n  const validateFile = (file) => {\n    // const maxSize = 100 * 1024 * 1024; // 100MB\n    // if (file.size > maxSize) {\n    //   setMessage({ type: 'error', text: '文件大小不能超过100MB' });\n    //   return false;\n    // }\n    return true;\n  };\n\n  const handleFileChange = (event) => {\n    const selectedFile = event.target.files[0];\n    if (selectedFile && validateFile(selectedFile)) {\n      setFile(selectedFile);\n      setMessage({ type: '', text: '' });\n    }\n  };\n\n  const handleUpload = async () => {\n    if (!file) {\n      setMessage({ type: 'error', text: '请先选择一个文件' });\n      return;\n    }\n\n    setUploading(true);\n    setMessage({ type: '', text: '' });\n    setProgress(0);\n\n    try {\n      const response = await fetch(UPLOAD_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': file.type,\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error('获取上传 URL 失败');\n      }\n\n      const data = await response.json();\n\n      const context = await uploadFileInChunks(file, data.uploadUrl, setProgress);\n\n      setMessage({ type: 'success', text: '文件上传成功！' });\n      setLink(`https://upload.moonchan.xyz/api/${context.id}/${file.name}`);\n    } catch (error) {\n      console.error('上传失败:', error);\n      setMessage({ type: 'error', text: '文件上传失败，请重试' });\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  return (\n    <Main><Nav></Nav>\n      <div className=\"max-w-md mx-auto p-6 border border-gray-300 rounded-lg shadow-md bg-white\">\n        <h2 className=\"text-xl font-semibold mb-4 text-gray-800\">文件上传</h2>\n\n        <div className=\"mb-4\">\n          <input\n            type=\"file\"\n            onChange={handleFileChange}\n            className=\"block w-full text-sm text-gray-500 \n                     file:mr-4 file:py-2 file:px-4 \n                     file:rounded-md file:border-0 \n                     file:text-sm file:font-semibold \n                     file:bg-blue-50 file:text-blue-700 \n                     hover:file:bg-blue-100\n                     focus:outline-none\"\n            disabled={uploading}\n          />\n          {file && (\n            <div className=\"mt-2 text-sm text-gray-600\">\n              已选择: {file.name} ({(file.size / 1024 / 1024).toFixed(2)} MB)\n            </div>\n          )}\n        </div>\n\n        {uploading && (\n          <div className=\"mb-4\">\n            <div className=\"h-2 w-full bg-gray-200 rounded-full overflow-hidden\">\n              <div\n                className=\"h-full bg-blue-600 transition-all duration-300\"\n                style={{ width: `${progress / (file.size / 1024 / 1024) * 100}%` }}\n              />\n            </div>\n            <div className=\"mt-1 text-sm text-gray-600 text-right\">\n              {(progress / (file.size / 1024 / 1024) * 100).toFixed(2)}%\n            </div>\n          </div>\n        )}\n\n        <button\n          onClick={handleUpload}\n          disabled={uploading || !file}\n          className={`w-full py-2 px-4 rounded-md \n                   ${uploading || !file\n              ? 'bg-gray-400 cursor-not-allowed'\n              : 'bg-blue-600 hover:bg-blue-700'\n            }\n                   text-white font-semibold transition-colors`}\n        >\n          {uploading ? '上传中...' : '上传文件'}\n        </button>\n\n        {message.text && (\n          <div className={`mt-3 p-3 rounded-md text-sm\n                        ${message.type === 'error'\n              ? 'bg-red-100 text-red-700'\n              : message.type === 'success'\n                ? 'bg-green-100 text-green-700'\n                : ''\n            }`}>\n            {message.text}\n          </div>\n        )}\n\n        {link && (\n          <div className=\"mt-4\">\n            <a\n              href={link}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"text-blue-600 hover:text-blue-800 break-all text-sm\"\n            >\n              {link}\n            </a>\n          </div>\n        )}\n\n        {/* <div className=\"flex flex-wrap\">\n        {progress.map((value, index) => (\n          <div\n            key={index}\n            className={`w-5 h-5 ${value ? 'bg-green-500' : 'bg-red-500'} mx-2`}\n          />\n        ))}\n      </div> */}\n\n\n      </div></Main>\n  );\n};\n\nexport default FileUpload;"],"names":["async","uploadFileInChunks","file","endpoint","setProgress","CHUNK_SIZE","length","Math","ceil","size","tasks","Array","from","_","i","start","end","min","fileChunk","slice","err","response","fetch","method","headers","toString","body","ok","Error","statusText","responseData","json","process","error","uploadChunk","results","Promise","all","task","shift","result","push","worker","flat","find","x","id","FileUpload","setFile","useState","uploading","setUploading","message","setMessage","type","text","progress","link","setLink","_jsxs","Main","children","_jsx","Nav","className","onChange","event","selectedFile","target","files","disabled","name","toFixed","style","width","onClick","data","context","uploadUrl","console","href","rel"],"sourceRoot":""}