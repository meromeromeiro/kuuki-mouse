{"version":3,"file":"static/js/314.97b52043.chunk.js","mappings":"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","sources":["chat/App.tsx"],"sourcesContent":["// App.tsx\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { FiSend, FiTrash2, FiUser, FiCpu, FiSettings, FiChevronDown, FiStopCircle, FiUpload, FiXCircle } from 'react-icons/fi';\n\n// --- Enhanced Type Definitions for Multimodal Content ---\ninterface TextContentPart {\n    type: 'text';\n    text: string;\n}\n\ninterface ImageContentPart {\n    type: 'image_url';\n    image_url: {\n        url: string; // e.g., data:image/jpeg;base64,...\n    };\n}\n\ntype UserContentItem = TextContentPart | ImageContentPart;\ntype UserMessageContent = UserContentItem[]; // User messages can have multiple parts (text and/or image)\ntype AssistantMessageContent = string;      // Assistant messages are streamed text\n\ninterface Message {\n    role: 'user' | 'assistant';\n    content: UserMessageContent | AssistantMessageContent;\n}\n\n// Streamed chunk structure (example, adjust based on actual API)\ninterface StreamChoiceDelta {\n    content?: string;\n    role?: 'assistant'; // Usually only in the first chunk\n}\n\ninterface StreamChoice {\n    delta: StreamChoiceDelta;\n    finish_reason?: string | null;\n    index: number;\n}\n\ninterface StreamChunk {\n    id?: string;\n    object?: string;\n    created?: number;\n    model?: string;\n    choices: StreamChoice[];\n}\n\n\ninterface EndpointConfig {\n    id: string;\n    name: string;\n    url: string;\n    models: { id: string; name: string }[];\n    defaultModelId: string;\n}\n\n// --- Configuration for Endpoints and Models ---\nconst ENDPOINTS_CONFIG: EndpointConfig[] = [\n    {\n        id: 'moonchan/groq',\n        name: 'Groq',\n        url: 'https://moonchan.xyz/groq',\n        models: [\n            { id: 'qwen/qwen3-32b', name: 'Qwen3-32B' },\n            { id: 'moonshotai/kimi-k2-instruct', name: 'Kimi K2 Instruct' },\n            { id: 'deepseek-r1-distill-llama-70b', name: 'DeepSeek R1 Distill Llama 70B' },\n            { id: 'gemma2-9b-it', name: 'Gemma 2 Instruct' },\n            { id: 'llama-3.1-8b-instant', name: 'Llama 3.1 8B' },\n            { id: 'llama-3.3-70b-versatile', name: 'Llama 3.3 70B' },\n            { id: 'llama-guard-3-8b', name: 'Llama Guard 3' },\n            { id: 'llama3-70b-8192', name: 'Llama 3 70B' },\n            { id: 'llama3-8b-8192', name: 'Llama 3 8B' },\n            { id: 'meta-llama/llama-4-maverick-17b-128e-instruct', name: 'Llama 4 Maverick 17B 128E' },\n            { id: 'meta-llama/llama-4-scout-17b-16e-instruct', name: 'Llama 4 Scout 17B 16E' },\n            { id: 'meta-llama/llama-guard-4-12b', name: 'Llama Guard 4 12B' },\n            { id: 'mistral-saba-24b', name: 'Mistral Saba 24B' },\n            { id: 'qwen-qwq-32b', name: 'QwQ 32B' },\n            { id: 'whisper-large-v3', name: 'Whisper' },\n            { id: 'whisper-large-v3-turbo', name: 'Whisper Large V3 Turbo' }\n        ],\n        defaultModelId: 'meta-llama/llama-4-maverick-17b-128e-instruct',\n    },\n    {\n        id: 'moonchan/chutes',\n        name: 'Chutes',\n        url: 'https://moonchan.xyz/groq?service=chutes',\n        models: [\n            { id: 'deepseek-ai/DeepSeek-V3-0324', name: 'DeepSeek-V3-0324' },\n            { id: 'deepseek-ai/DeepSeek-Prover-V2-671B', name: 'DeepSeek-Prover-V2-671B' },\n            { id: 'deepseek-ai/DeepSeek-R1', name: 'DeepSeek-R1' },\n            { id: 'deepseek-ai/DeepSeek-V3', name: 'DeepSeek-V3' },\n            { id: 'tngtech/DeepSeek-R1T-Chimera', name: 'DeepSeek-R1T-Chimera' },\n            { id: 'Qwen/Qwen3-235B-A22B', name: 'Qwen3-235B-A22B' },\n            { id: 'Qwen/Qwen3-30B-A3B', name: 'Qwen3-30B-A3B' },\n            { id: 'Qwen/Qwen3-32B', name: 'Qwen3-32B' },\n            { id: 'Qwen/Qwen3-14B', name: 'Qwen3-14B' },\n            { id: 'Qwen/Qwen3-8B', name: 'Qwen3-8B' },\n            { id: 'Qwen/Qwen2.5-VL-32B-Instruct', name: 'Qwen2.5-VL-32B-Instruct' }, // Vision-Language model\n            { id: 'chutesai/Llama-4-Maverick-17B-128E-Instruct-FP8', name: 'Llama-4-Maverick-17B-128E-Instruct-FP8' },\n        ],\n        defaultModelId: 'deepseek-ai/DeepSeek-V3-0324',\n    },\n];\n\nfunction App() {\n    const [history, setHistory] = useState<Message[]>([]);\n    const [input, setInput] = useState<string>('');\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n\n    const [selectedEndpointId, setSelectedEndpointId] = useState<string>(ENDPOINTS_CONFIG[0].id);\n    const [selectedModelId, setSelectedModelId] = useState<string>(ENDPOINTS_CONFIG[0].defaultModelId);\n\n    const [temperature, setTemperature] = useState<number>(0.7);\n    const [maxTokens, setMaxTokens] = useState<number>(65536);\n    const [topP, setTopP] = useState<number>(1);\n    const [stop, setStop] = useState<string>('');\n\n    const [uploadedImage, setUploadedImage] = useState<string | null>(null);\n    const [uploadedImageName, setUploadedImageName] = useState<string | null>(null);\n\n    const messagesEndRef = useRef<HTMLDivElement | null>(null);\n    const abortControllerRef = useRef<AbortController | null>(null);\n    const fileInputRef = useRef<HTMLInputElement | null>(null);\n\n    const currentEndpoint = ENDPOINTS_CONFIG.find(ep => ep.id === selectedEndpointId) || ENDPOINTS_CONFIG[0];\n    const availableModels = currentEndpoint.models;\n\n    useEffect(() => {\n        const currentEpConfig = ENDPOINTS_CONFIG.find(ep => ep.id === selectedEndpointId);\n        if (currentEpConfig && !currentEpConfig.models.find(m => m.id === selectedModelId)) {\n            setSelectedModelId(currentEpConfig.defaultModelId);\n        }\n    }, [selectedEndpointId, selectedModelId]);\n\n    useEffect(() => {\n        if (messagesEndRef.current) {\n            messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }, [history]);\n\n    useEffect(() => {\n        if (history.length > 0) {\n            const lastMessage = history[history.length - 1];\n            if (lastMessage.role === 'assistant' && typeof lastMessage.content === 'string' && isLoading) {\n                messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }, [history, isLoading]);\n\n\n    const handleEndpointChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        const newEndpointId = e.target.value;\n        setSelectedEndpointId(newEndpointId);\n        const newEndpointConfig = ENDPOINTS_CONFIG.find(ep => ep.id === newEndpointId);\n        if (newEndpointConfig) {\n            setSelectedModelId(newEndpointConfig.defaultModelId);\n        }\n    };\n\n    const handleImageUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const file = event.target.files?.[0];\n        if (file) {\n            if (file.size > 20 * 1024 * 1024) { // Max 20MB (common limit for vision APIs)\n                alert(\"Image size should not exceed 20MB.\");\n                if (fileInputRef.current) fileInputRef.current.value = \"\";\n                return;\n            }\n            const allowedTypes = [\"image/png\", \"image/jpeg\", \"image/gif\", \"image/webp\"];\n            if (!allowedTypes.includes(file.type)) {\n                alert(\"Invalid file type. Please upload PNG, JPEG, GIF, or WebP.\");\n                if (fileInputRef.current) fileInputRef.current.value = \"\";\n                return;\n            }\n\n            const reader = new FileReader();\n            reader.onloadend = () => {\n                setUploadedImage(reader.result as string);\n                setUploadedImageName(file.name);\n            };\n            reader.readAsDataURL(file); // Reads as base64 data URL\n        }\n        if (fileInputRef.current) { // Reset to allow re-uploading the same file\n            fileInputRef.current.value = \"\";\n        }\n    };\n\n    const removeUploadedImage = () => {\n        setUploadedImage(null);\n        setUploadedImageName(null);\n        if (fileInputRef.current) {\n            fileInputRef.current.value = \"\";\n        }\n    };\n\n    const stopStreaming = useCallback(() => {\n        if (abortControllerRef.current) {\n            abortControllerRef.current.abort();\n            console.log(\"Streaming stopped by user.\");\n        }\n    }, []);\n\n    const sendMessage = useCallback(async () => {\n        if (!input.trim() && !uploadedImage) return;\n        if (isLoading && abortControllerRef.current) {\n            stopStreaming();\n        }\n\n        const userContentParts: UserMessageContent = [];\n        if (input.trim()) {\n            userContentParts.push({ type: 'text', text: input.trim() });\n        }\n        if (uploadedImage) {\n            userContentParts.push({ type: 'image_url', image_url: { url: uploadedImage } });\n        }\n\n        if (userContentParts.length === 0) return;\n\n        const userMessage: Message = { role: 'user', content: userContentParts };\n        const currentHistory = history; // Capture history before adding assistant placeholder\n\n        setHistory(prevHistory => [\n            ...prevHistory,\n            userMessage,\n            { role: 'assistant', content: '' as AssistantMessageContent }\n        ]);\n        setInput('');\n        setUploadedImage(null);\n        setUploadedImageName(null);\n        setIsLoading(true);\n\n        abortControllerRef.current = new AbortController();\n        const signal = abortControllerRef.current.signal;\n\n        const messagesForAPI = [...currentHistory, userMessage];\n\n        const body = {\n            model: selectedModelId,\n            messages: messagesForAPI,\n            temperature,\n            ...(currentEndpoint.id.includes('groq') ? {} : { max_completion_tokens: maxTokens }),\n            top_p: topP,\n            stop: stop ? stop.split(',').map(s => s.trim()).filter(Boolean) : null,\n            stream: true,\n        };\n\n        try {\n            const response = await fetch(currentEndpoint.url, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(body),\n                signal,\n            });\n\n            if (!response.ok) {\n                let errorContent = `API Error: ${response.status} ${response.statusText}`;\n                try {\n                    const errorDataText = await response.text();\n                    const errorData = JSON.parse(errorDataText);\n                    errorContent += ` - ${errorData.error?.message || errorData.message || JSON.stringify(errorData)}`;\n                } catch (e) {\n                    errorContent += ` (Failed to parse error details: ${e instanceof Error ? e.message : String(e)})`;\n                }\n                setHistory(prev => {\n                    const newHistory = [...prev];\n                    if (newHistory.length > 0 && newHistory[newHistory.length - 1].role === 'assistant') {\n                        newHistory[newHistory.length - 1].content = errorContent;\n                    }\n                    return newHistory;\n                });\n                setIsLoading(false);\n                return;\n            }\n\n            if (!response.body) throw new Error('Response body is null');\n            const reader = response.body.getReader();\n            const decoder = new TextDecoder();\n            let doneReading = false;\n\n            while (!doneReading) {\n                if (signal.aborted) {\n                    throw new DOMException(\"Aborted by user\", \"AbortError\");\n                }\n                const { value, done } = await reader.read();\n                doneReading = done;\n                const chunk = decoder.decode(value, { stream: !doneReading });\n                const lines = chunk.split('\\n');\n\n                for (const line of lines) {\n                    if (line.startsWith('data: ')) {\n                        const jsonData = line.substring(5).trim();\n                        if (jsonData === '[DONE]') {\n                            doneReading = true;\n                            break;\n                        }\n                        if (!jsonData) continue;\n\n                        try {\n                            const parsedChunk = JSON.parse(jsonData) as StreamChunk;\n                            let contentChunk = \"\";\n                            if (parsedChunk.choices && parsedChunk.choices[0]?.delta?.content) {\n                                contentChunk = parsedChunk.choices[0].delta.content;\n                            }\n                            if (contentChunk) {\n                                setHistory(prev => {\n                                    const newHistory = [...prev];\n                                    const lastMsgIndex = newHistory.length - 1;\n                                    if (lastMsgIndex >= 0 && newHistory[lastMsgIndex].role === 'assistant') {\n                                        // Ensure content is treated as string for assistant\n                                        newHistory[lastMsgIndex].content = (newHistory[lastMsgIndex].content as AssistantMessageContent) + contentChunk;\n                                    }\n                                    return newHistory;\n                                });\n                            }\n                        } catch (e) {\n                            console.warn('Failed to parse stream chunk JSON:', jsonData, e);\n                        }\n                    }\n                }\n            }\n        } catch (error) {\n            if (error instanceof DOMException && error.name === 'AbortError') {\n                console.log('Fetch aborted.');\n                setHistory(prev => {\n                    const newHistory = [...prev];\n                    const lastMsgIndex = newHistory.length - 1;\n                    if (lastMsgIndex >= 0 && newHistory[lastMsgIndex].role === 'assistant') {\n                        if (newHistory[lastMsgIndex].content === '') {\n                            return newHistory.slice(0, -1);\n                        }\n                        newHistory[lastMsgIndex].content += '\\n[Streaming cancelled by user]';\n                    }\n                    return newHistory;\n                });\n            } else {\n                console.error('Error sending message or processing stream:', error);\n                const errorMessageText = `Error: ${error instanceof Error ? error.message : String(error)}`;\n                setHistory(prev => {\n                    const newHistory = [...prev];\n                    const lastMsgIndex = newHistory.length - 1;\n                    if (lastMsgIndex >= 0 && newHistory[lastMsgIndex].role === 'assistant') {\n                        newHistory[lastMsgIndex].content = (newHistory[lastMsgIndex].content || \"\") + `\\n[Error: ${errorMessageText}]`;\n                    } else {\n                        return [...newHistory, { role: 'assistant', content: `[Error: ${errorMessageText}]` as AssistantMessageContent }];\n                    }\n                    return newHistory;\n                });\n            }\n        } finally {\n            setIsLoading(false);\n            abortControllerRef.current = null;\n        }\n    }, [\n        input, uploadedImage, isLoading, selectedModelId, history, temperature, maxTokens, topP, stop, currentEndpoint,\n        setInput, setIsLoading, setHistory, stopStreaming, setUploadedImage, setUploadedImageName\n    ]);\n\n    const clearHistory = () => {\n        stopStreaming();\n        setHistory([]);\n        setUploadedImage(null);\n        setUploadedImageName(null);\n        if (fileInputRef.current) {\n            fileInputRef.current.value = \"\";\n        }\n    };\n\n    const ParameterInput: React.FC<{\n        label: string; type: string; value: string | number;\n        onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n        step?: string; min?: string; max?: string; showValue?: boolean;\n    }> = ({ label, type, value, onChange, step, min, max, showValue = false }) => (\n        <div className=\"mb-4\">\n            <label className=\"block text-sm font-medium text-gray-300 mb-1 flex justify-between\">\n                {label} {showValue && type === \"range\" && <span>({value})</span>}\n            </label>\n            <input\n                type={type} value={value} onChange={onChange} step={step} min={min} max={max}\n                className=\"w-full p-2 border border-gray-600 rounded bg-gray-700 text-white focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n            />\n        </div>\n    );\n\n\n    return (\n        <div className=\"flex flex-col md:flex-row h-screen bg-gray-800 text-white font-sans\">\n            {/* Left Panel: Chat History & Input */}\n            <div className=\"flex-1 flex flex-col p-4 md:p-6 bg-gray-800\">\n                <header className=\"mb-4\">\n                    <h1 className=\"text-2xl font-semibold text-indigo-400\">AI Chat Interface (Streaming)</h1>\n                </header>\n\n                {/* Chat Messages */}\n                <div className=\"flex-grow overflow-y-auto space-y-4 pr-2 custom-scrollbar\">\n                    {history.map((msg, index) => (\n                        <div\n                            key={index}\n                            className={`flex ${msg.role === 'user' ? 'justify-end' : 'justify-start'}`}\n                        >\n                            <div\n                                className={`max-w-xl p-3 rounded-xl shadow-md ${msg.role === 'user'\n                                    ? 'bg-indigo-600 text-white rounded-br-none'\n                                    : 'bg-gray-700 text-gray-200 rounded-bl-none'\n                                    }`}\n                            >\n                                <div className=\"flex items-center mb-1\">\n                                    {msg.role === 'user' ? (\n                                        <FiUser className=\"mr-2 text-indigo-300\" />\n                                    ) : (\n                                        <FiCpu className=\"mr-2 text-green-400\" />\n                                    )}\n                                    <span className=\"text-xs font-semibold\">\n                                        {msg.role === 'user' ? 'You' : 'Assistant'}\n                                    </span>\n                                </div>\n                                <div className=\"prose prose-sm prose-invert max-w-none break-words\">\n                                    {msg.role === 'assistant' ? (\n                                        <ReactMarkdown>{(msg.content as AssistantMessageContent) || \"▋\"}</ReactMarkdown>\n                                    ) : (\n                                        (msg.content as UserMessageContent).map((part, partIndex) => {\n                                            if (part.type === 'text') {\n                                                return <p key={partIndex} className=\"whitespace-pre-wrap my-0.5\">{part.text}</p>;\n                                            }\n                                            if (part.type === 'image_url') {\n                                                return (\n                                                    <img\n                                                        key={partIndex}\n                                                        src={part.image_url.url}\n                                                        alt=\"Uploaded content\"\n                                                        className=\"max-w-full sm:max-w-xs max-h-64 my-2 rounded-md object-contain bg-gray-600\" // Added bg for transparent images\n                                                    />\n                                                );\n                                            }\n                                            return null;\n                                        })\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n                    <div ref={messagesEndRef} />\n                </div>\n\n                {/* Input Area */}\n                <div className=\"mt-4 pt-4 border-t border-gray-700\">\n                    {uploadedImage && (\n                        <div className=\"mb-3 p-2 bg-gray-750 rounded-lg flex items-center space-x-3 shadow\">\n                            <img\n                                src={uploadedImage}\n                                alt={uploadedImageName || \"Preview\"}\n                                className=\"h-16 w-16 object-cover rounded-md border border-gray-600\"\n                            />\n                            <span className=\"text-sm text-gray-300 truncate flex-grow max-w-[calc(100%-100px)]\">\n                                {uploadedImageName || 'Uploaded Image'}\n                            </span>\n                            <button\n                                onClick={removeUploadedImage}\n                                className=\"text-red-400 hover:text-red-300 p-1.5 rounded-full hover:bg-gray-600 transition-colors\"\n                                title=\"Remove image\"\n                            >\n                                <FiXCircle size={22} />\n                            </button>\n                        </div>\n                    )}\n                    <div className=\"flex items-end space-x-2\">\n                        <button\n                            type=\"button\"\n                            onClick={() => fileInputRef.current?.click()}\n                            className=\"p-3 bg-teal-600 text-white rounded-lg hover:bg-teal-700 focus:ring-2 focus:ring-teal-500 focus:outline-none h-[58px] flex items-center justify-center transition-colors duration-150 shrink-0\"\n                            title=\"Upload Image (PNG, JPG, GIF, WebP)\"\n                            disabled={isLoading && !abortControllerRef.current}\n                        >\n                            <FiUpload size={20} />\n                        </button>\n                        <input\n                            type=\"file\"\n                            ref={fileInputRef}\n                            accept=\"image/png, image/jpeg, image/gif, image/webp\"\n                            onChange={handleImageUpload}\n                            className=\"hidden\"\n                        />\n                        <textarea\n                            rows={3}\n                            value={input}\n                            onChange={(e) => setInput(e.target.value)}\n                            placeholder=\"Type your message or upload an image...\"\n                            className=\"flex-grow p-3 border border-gray-600 rounded-lg bg-gray-700 text-white focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 resize-none custom-scrollbar min-h-[58px] max-h-[150px]\"\n                            onKeyDown={e => {\n                                if (e.key === 'Enter' && !e.shiftKey) {\n                                    e.preventDefault();\n                                    sendMessage();\n                                }\n                            }}\n                            disabled={isLoading && !abortControllerRef.current}\n                        />\n                        {isLoading && abortControllerRef.current ? (\n                            <button\n                                onClick={stopStreaming}\n                                className=\"p-3 bg-red-600 text-white rounded-lg hover:bg-red-700 focus:ring-2 focus:ring-red-500 focus:outline-none transition-colors duration-150 flex items-center justify-center h-[58px] shrink-0\"\n                                title=\"Stop Generating\"\n                            >\n                                <FiStopCircle size={20} />\n                            </button>\n                        ) : (\n                            <button\n                                onClick={sendMessage}\n                                disabled={(!input.trim() && !uploadedImage) || (isLoading && !abortControllerRef.current)}\n                                className=\"p-3 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 focus:ring-2 focus:ring-indigo-500 focus:outline-none disabled:opacity-50 disabled:cursor-not-allowed transition-colors duration-150 flex items-center justify-center h-[58px] shrink-0\"\n                            >\n                                <FiSend size={20} />\n                            </button>\n                        )}\n                    </div>\n                    {isLoading && <p className=\"text-xs text-gray-400 mt-1 text-center\">Assistant is typing...</p>}\n                </div>\n            </div>\n\n            {/* Right Panel: Settings */}\n            <div className=\"w-full md:w-80 lg:w-96 bg-gray-850 p-4 md:p-6 border-l border-gray-700 overflow-y-auto custom-scrollbar flex-shrink-0\">\n                <div className=\"flex justify-between items-center mb-6\">\n                    <h2 className=\"text-xl font-semibold text-indigo-400 flex items-center\">\n                        <FiSettings className=\"mr-2\" /> Settings\n                    </h2>\n                    <button\n                        onClick={clearHistory}\n                        className=\"text-sm text-red-400 hover:text-red-300 flex items-center\"\n                        title=\"Clear Chat History\"\n                        disabled={isLoading && !abortControllerRef.current}\n                    >\n                        <FiTrash2 className=\"mr-1\" /> Clear Chat\n                    </button>\n                </div>\n\n                <div className=\"mb-6\">\n                    <label htmlFor=\"endpoint-select\" className=\"block text-sm font-medium text-gray-300 mb-1\">API Endpoint</label>\n                    <div className=\"relative\">\n                        <select\n                            id=\"endpoint-select\" value={selectedEndpointId} onChange={handleEndpointChange}\n                            className=\"w-full p-2.5 border border-gray-600 rounded bg-gray-700 text-white focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 appearance-none pr-8\"\n                        >\n                            {ENDPOINTS_CONFIG.map(ep => (<option key={ep.id} value={ep.id}>{ep.name}</option>))}\n                        </select>\n                        <FiChevronDown className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 pointer-events-none\" />\n                    </div>\n                </div>\n\n                <div className=\"mb-6\">\n                    <label htmlFor=\"model-select\" className=\"block text-sm font-medium text-gray-300 mb-1\">Model</label>\n                    <div className=\"relative\">\n                        <select\n                            id=\"model-select\" value={selectedModelId} onChange={(e) => setSelectedModelId(e.target.value)}\n                            className=\"w-full p-2.5 border border-gray-600 rounded bg-gray-700 text-white focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 appearance-none pr-8\"\n                        >\n                            {availableModels.map(model => (<option key={model.id} value={model.id}>{model.name}</option>))}\n                        </select>\n                        <FiChevronDown className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 pointer-events-none\" />\n                    </div>\n                </div>\n\n                <ParameterInput label=\"Temperature\" type=\"range\" value={temperature} onChange={(e) => setTemperature(parseFloat(e.target.value))} step=\"0.01\" min=\"0\" max=\"2\" showValue={true} />\n                <ParameterInput label=\"Max Tokens (ignored by Groq in stream)\" type=\"number\" value={maxTokens} onChange={(e) => setMaxTokens(parseInt(e.target.value, 10))} min=\"1\" />\n                <ParameterInput label=\"Top P\" type=\"range\" value={topP} onChange={(e) => setTopP(parseFloat(e.target.value))} step=\"0.01\" min=\"0\" max=\"1\" showValue={true} />\n                <ParameterInput label=\"Stop Sequence(s) (comma-sep)\" type=\"text\" value={stop} onChange={(e) => setStop(e.target.value)} />\n\n                <div className=\"mt-6\">\n                    <button\n                        onClick={clearHistory}\n                        className=\"w-full bg-red-600 text-white p-2.5 rounded-lg hover:bg-red-700 focus:ring-2 focus:ring-red-500 focus:outline-none transition-colors duration-150 flex items-center justify-center\"\n                        disabled={isLoading && !abortControllerRef.current}\n                    >\n                        <FiTrash2 className=\"mr-2\" /> Clear History\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;"],"names":["ENDPOINTS_CONFIG","id","name","url","models","defaultModelId","history","setHistory","useState","input","setInput","isLoading","setIsLoading","selectedEndpointId","setSelectedEndpointId","selectedModelId","setSelectedModelId","temperature","setTemperature","maxTokens","setMaxTokens","topP","setTopP","stop","setStop","uploadedImage","setUploadedImage","uploadedImageName","setUploadedImageName","messagesEndRef","useRef","abortControllerRef","fileInputRef","currentEndpoint","find","ep","availableModels","useEffect","currentEpConfig","m","current","scrollIntoView","behavior","length","lastMessage","_messagesEndRef$curre","role","content","stopStreaming","useCallback","abort","console","log","sendMessage","async","trim","userContentParts","push","type","text","image_url","userMessage","currentHistory","prevHistory","AbortController","signal","messagesForAPI","body","model","messages","includes","max_completion_tokens","top_p","split","map","s","filter","Boolean","stream","response","fetch","method","headers","JSON","stringify","ok","errorContent","status","statusText","_errorData$error","errorDataText","errorData","parse","error","message","e","Error","String","prev","newHistory","reader","getReader","decoder","TextDecoder","doneReading","aborted","DOMException","value","done","read","lines","decode","line","startsWith","jsonData","substring","_parsedChunk$choices$","_parsedChunk$choices$2","parsedChunk","contentChunk","choices","delta","lastMsgIndex","warn","slice","errorMessageText","clearHistory","ParameterInput","_ref","label","onChange","step","min","max","showValue","_jsxs","className","children","_jsx","msg","index","FiUser","FiCpu","ReactMarkdown","part","partIndex","src","alt","ref","onClick","removeUploadedImage","title","FiXCircle","size","_fileInputRef$current","click","disabled","FiUpload","accept","event","_event$target$files","file","target","files","alert","FileReader","onloadend","result","readAsDataURL","rows","placeholder","onKeyDown","key","shiftKey","preventDefault","FiStopCircle","FiSend","FiSettings","FiTrash2","htmlFor","newEndpointId","newEndpointConfig","FiChevronDown","parseFloat","parseInt"],"sourceRoot":""}