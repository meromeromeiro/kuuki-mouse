{"version":3,"file":"static/js/5.034a98b6.chunk.js","mappings":"yIACO,SAASA,EAAaC,GACzB,IAEE,MAAMC,EAAUC,KAAKF,EAAIG,QAAQ,MAAO,KAGxC,IACE,OAAOC,mBAAmBC,OAAOJ,GACnC,CAAE,MAEA,MAAMK,EAAQ,IAAIC,WAAWN,EAAQO,QACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIR,EAAQO,OAAQC,IAClCH,EAAMG,GAAKR,EAAQS,WAAWD,GAEhC,OAAO,IAAIE,YAAY,SAASC,OAAON,EACzC,CACF,CAAE,MAAOO,GAEP,OADAC,QAAQD,MAAM,mCAAgBA,GACvB,8CACT,CACF,CCfa,SAASE,IACtB,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,WAAS,IAC3BC,aAAaC,QAAQ,kBAAoB,MAG7CC,EAAqBC,UACzB,MAAMC,QCTHD,eAAgCN,GACnC,IACI,MAAMQ,QAAiBC,MAAM,kDAAoBT,GAAU,MAC3D,IAAKQ,EAASE,GAAI,MAAM,IAAIC,MAAM,4BAClC,aAAaH,EAASI,MAC1B,CAAE,MAAOf,GAEL,OADAC,QAAQD,MAAM,wCAAWA,GAClB,EACX,CACJ,CDA2BgB,CAAiBb,GACxC,GAAIO,EAASf,OAAS,EAAG,CACvBe,EAASO,QAAQC,GACjB,MAAMC,ECDL,SAAqBT,GAExB,OAAOA,EAASU,QAAO,CAACC,EAAOC,IACpBA,EAAIC,GAAKF,EAAQC,EAAIC,GAAKF,GAClC,IAIP,CDPwBG,CAAYd,GAC9BN,EAAUe,GACVb,aAAamB,QAAQ,gBAAiBN,EAAUO,WAClD,GAGIR,EAAoBS,IACQ,YAA5BC,aAAaC,YACf,IAAID,aAAa,sBAAO,IAAIE,KAAMC,SAASJ,EAAQJ,IAAM,OAAQS,mBAAoB,CACnFC,KAAM/C,EAAayC,EAAQO,SAC3BC,KAAM,0BAEV,EAcF,OAXAC,EAAAA,EAAAA,YAAU,KAERR,aAAaS,oBAGb,MAAMC,EAAWC,YAAY/B,EAAoB,KAGjD,OAFAA,IAEO,IAAMgC,cAAcF,EAAS,GACnC,IAEI,IACT,C,aE5BA,QAVA,WACE,OACEG,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,0CACJC,EAAAA,EAAAA,KAACzC,EAAkB,MAIzB,C","sources":["utils/encoding.ts","components/NotificationPoller.js","services/messageService.js","Test.js"],"sourcesContent":["// src/utils/encoding.ts\nexport function decodeBase64(str: string): string {\n    try {\n      // 兼容两种编码方式\n      const decoded = atob(str.replace(/\\s/g, ''));\n      \n      // 方案1：URIComponent 编码方式\n      try {\n        return decodeURIComponent(escape(decoded));\n      } catch {\n        // 方案2：TextDecoder 方式\n        const bytes = new Uint8Array(decoded.length);\n        for (let i = 0; i < decoded.length; i++) {\n          bytes[i] = decoded.charCodeAt(i);\n        }\n        return new TextDecoder('utf-8').decode(bytes);\n      }\n    } catch (error) {\n      console.error('Base64 解码失败:', error);\n      return '[无法解析的内容]';\n    }\n  }","// src/components/NotificationPoller.js\n\nimport { useEffect, useState } from 'react';\nimport { fetchNewMessages, getLatestId } from '../services/messageService';\nimport { decodeBase64 } from '../utils/encoding';\n\nexport default function NotificationPoller() {\n  const [lastId, setLastId] = useState(() => {\n    return (localStorage.getItem('lastMessageId') || '0');\n  });\n\n  const checkNotifications = async () => {\n    const messages = await fetchNewMessages(lastId);\n    if (messages.length > 0) {\n      messages.forEach(showNotification);\n      const newLastId = getLatestId(messages);\n      setLastId(newLastId); \n      localStorage.setItem('lastMessageId', newLastId.toString());\n    }\n  };\n\n  const showNotification = (message) => {\n    if (Notification.permission === 'granted') {\n      new Notification(`新消息 ${new Date((parseInt(message.id) / 65536)).toLocaleString()}`, {\n        body: decodeBase64(message.payload),\n        icon: '/notification-icon.png'\n      });\n    }\n  };\n\n  useEffect(() => {\n    // 初始化权限请求\n    Notification.requestPermission();\n    \n    // 启动轮询\n    const interval = setInterval(checkNotifications, 30000);\n    checkNotifications(); // 立即执行首次检查\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return null; // 不需要渲染内容\n}","// src/services/messageService.js\nconst API_URL = 'https://chat.moonchan.xyz/api/message/me';\n\nexport async function fetchNewMessages(lastId) {\n    try {\n        const response = await fetch(`${API_URL}?after=${lastId || ''}`);\n        if (!response.ok) throw new Error('请求失败');\n        return await response.json();\n    } catch (error) {\n        console.error('获取消息失败:', error);\n        return [];\n    }\n}\n\nexport function getLatestId(messages) {\n    // 方案1：直接字符串比较（适用于定长时间戳字符串）\n    return messages.reduce((maxId, msg) => {\n        return msg.id > maxId ? msg.id : maxId;\n    }, '0');\n\n    // 方案2：转换为数字比较（适用于纯数字时间戳）\n    // return Math.max(...messages.map(msg => parseInt(msg.id, 10))).toString();\n}","// src/App.js\nimport NotificationPoller from './components/NotificationPoller';\n\n\nfunction App() {\n  return (\n    <div>\n      <h1>消息通知系统</h1>\n      <NotificationPoller />\n    </div>\n\n  );\n}\n\nexport default App;"],"names":["decodeBase64","str","decoded","atob","replace","decodeURIComponent","escape","bytes","Uint8Array","length","i","charCodeAt","TextDecoder","decode","error","console","NotificationPoller","lastId","setLastId","useState","localStorage","getItem","checkNotifications","async","messages","response","fetch","ok","Error","json","fetchNewMessages","forEach","showNotification","newLastId","reduce","maxId","msg","id","getLatestId","setItem","toString","message","Notification","permission","Date","parseInt","toLocaleString","body","payload","icon","useEffect","requestPermission","interval","setInterval","clearInterval","_jsxs","children","_jsx"],"sourceRoot":""}